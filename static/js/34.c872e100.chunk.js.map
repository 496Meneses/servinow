{"version":3,"sources":["components/AppMenu.js","components/LeftSidebar.js"],"names":["MenuItemWithChildren","item","linkClassNames","subMenuClassNames","activatedMenuItemIds","Icon","icon","className","classNames","indexOf","id","to","aria-expanded","badge","variant","text","name","children","map","child","i","Fragment","MenuItem","active","linkClassName","useAuth","user","MenuItemLink","path","AppMenu","menuRef","componentDidMount","props","menu","menuItems","initMenu","history","listen","location","action","document","body","classList","remove","changeActiveMenuFromLocation","componentDidUpdate","prevProps","this","mode","MetisMenu","on","event","window","addEventListener","menuClick","e","target","contains","hide","detail","shownElement","removeEventListener","isHorizontal","activatedKeys","header","Component","defaultProps","withRouter","connect","state","UserProfile","auth","src","alt","isAuthenticated","data-toggle","tag","right","divider","SideNav","LeftSidebar","handleOtherClick","componentWillUnmount","menuNodeRef","isMobileOnly","handleClick","bind","console","log","isCondensed","ref","node"],"mappings":"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","file":"static/js/34.c872e100.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport MetisMenu from 'metismenujs/dist/metismenujs';\r\n\r\nimport { initMenu, changeActiveMenuFromLocation } from '../redux/actions';\r\nimport { useAuth } from './UserContext';\r\n\r\n\r\nconst MenuItemWithChildren = ({ item, linkClassNames, subMenuClassNames, activatedMenuItemIds }) => {\r\n    \r\n    const Icon = item.icon || null;\r\n    return (\r\n        <li className={classNames('side-nav-item', { 'mm-active': activatedMenuItemIds.indexOf(item.id) >= 0 })}>\r\n            <Link\r\n                to=\"/\"\r\n                className={classNames('side-sub-nav-link', linkClassNames)}\r\n                aria-expanded={activatedMenuItemIds.indexOf(item.id) >= 0}>\r\n                {item.icon && <Icon />}\r\n                {item.badge && (\r\n                    <span className={`badge badge-${item.badge.variant} float-right`}>{item.badge.text}</span>\r\n                )}\r\n                <span> {item.name} </span>\r\n                <span className=\"menu-arrow\"></span>\r\n            </Link>\r\n\r\n            <ul\r\n                className={classNames(subMenuClassNames, 'mm-collapse', {\r\n                    'mm-collapsed mm-show': activatedMenuItemIds.indexOf(item.id) >= 0,\r\n                })}\r\n                aria-expanded={activatedMenuItemIds.indexOf(item.id) >= 0}>\r\n                {item.children.map((child, i) => {\r\n                    return (\r\n                        <React.Fragment key={i}>\r\n                            {child.children ? (\r\n                              \r\n                                <MenuItemWithChildren\r\n                                    item={child}\r\n                                    linkClassNames=\"\"\r\n                                    activatedMenuItemIds={activatedMenuItemIds}\r\n                                    subMenuClassNames=\"side-nav-third-level\"\r\n                                />\r\n                            ) : (\r\n                                    \r\n                                    <MenuItem\r\n                                        item={child}\r\n                                        className={classNames({ active: activatedMenuItemIds.indexOf(child.id) >= 0 })}\r\n                                        linkClassName=\"\"\r\n                                    />\r\n                                )}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItem = ({ item, className, linkClassName }) => {\r\n    \r\n    \r\n    const auth = useAuth();\r\n    if(auth.user === null){\r\n        \r\n        if(item.name === \"Ofertas\"){\r\n            \r\n            return (\r\n                <li className={classNames('side-nav-item', className)}>\r\n                    <MenuItemLink item={item} className={linkClassName} />\r\n                </li>\r\n            );\r\n            \r\n\r\n        }\r\n        else{\r\n            return (\r\n                <>\r\n\r\n                </>\r\n            );\r\n        }\r\n    }else {\r\n        return (\r\n        \r\n            <li className={classNames('side-nav-item', className)}>\r\n                <MenuItemLink item={item} className={linkClassName} />\r\n            </li>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n;\r\n\r\nconst MenuItemLink = ({ item, className }) => {\r\n    const Icon = item.icon || null;\r\n    return (\r\n        <Link to={item.path} className={classNames('side-nav-link-ref', 'side-sub-nav-link', className)}>\r\n            \r\n            {item.icon && <Icon />}\r\n            {item.badge && <span className={`font-size-12 badge badge-${item.badge.variant} float-right`}>{item.badge.text}</span>}\r\n            <span> {item.name} </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\n/**\r\n * Renders the application menu\r\n */\r\n\r\nclass AppMenu extends Component {\r\n    menuRef = null;\r\n\r\n    static defaultProps = {\r\n        mode: 'vertical',\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (!this.props.menu.menuItems) this.props.initMenu();\r\n        else this.initMenu();\r\n\r\n        this.props.history.listen((location, action) => {\r\n            // hide menus in mobile\r\n            document.body.classList.remove('sidebar-enable');\r\n            this.props.changeActiveMenuFromLocation();\r\n        });\r\n    };\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (\r\n            !prevProps.menu.menuItems ||\r\n            (prevProps.menu.menuItems && prevProps.menu.menuItems !== this.props.menu.menuItems)\r\n        ) {\r\n            this.initMenu();\r\n        }\r\n\r\n        if (!this.props.menu.activatedMenuItemIds) {\r\n            this.props.changeActiveMenuFromLocation();\r\n        }\r\n    };\r\n\r\n    initMenu() {\r\n        if (this.props.mode === 'horizontal') {\r\n            const menuRef = this.menuRef = new MetisMenu('#menu-bar').on('shown.metisMenu', function(event) {\r\n                window.addEventListener('click', function menuClick(e) {\r\n                    if (!event.target.contains(e.target)) {\r\n                        menuRef.hide(event.detail.shownElement);\r\n                        window.removeEventListener('click', menuClick);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            this.menuRef = new MetisMenu('#menu-bar');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHorizontal = this.props.mode === 'horizontal';\r\n        const activatedKeys = isHorizontal ? [] : this.props.menu ? (this.props.menu.activatedMenuItemIds? this.props.menu.activatedMenuItemIds :[]) : [] || [];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                \r\n                        {this.props.menu && this.props.menu.menuItems && (\r\n                            <ul className=\"metismenu\" id=\"menu-bar\">\r\n                                {this.props.menu.menuItems.map((item, i) => {\r\n                                    return (\r\n                                        <React.Fragment key={item.id}>\r\n                                            {item.header && !isHorizontal && (\r\n                                                <li className=\"menu-title\" key={i + '-el'}>\r\n                                                    {item.header}\r\n                                                </li>\r\n                                            )}\r\n\r\n                                            {item.children ? (\r\n                                                <MenuItemWithChildren\r\n                                                    item={item}\r\n                                                    subMenuClassNames=\"nav-second-level\"\r\n                                                    activatedMenuItemIds={activatedKeys}\r\n                                                    linkClassNames=\"side-nav-link\"\r\n                                                />\r\n                                            ) : (\r\n                                                    <MenuItem\r\n                                                        item={item}\r\n                                                        className={classNames({ 'mm-active': activatedKeys.indexOf(item.id) >= 0 })}\r\n                                                        linkClassName=\"side-nav-link\"\r\n                                                    />\r\n                                                )}\r\n                                        </React.Fragment>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.AppMenu,\r\n    };\r\n};\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        { initMenu, changeActiveMenuFromLocation }\r\n    )(AppMenu)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isMobileOnly } from \"react-device-detect\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport AppMenu from './AppMenu';\r\nimport {useAuth} from '../components/UserContext'\r\n\r\n\r\n/**\r\n * User Widget\r\n */\r\nconst UserProfile = () => {\r\n    const auth= useAuth();\r\n    return <React.Fragment>\r\n        \r\n        <div className=\"media user-profile mt-2 mb-2\">\r\n            <img src=\"https://toppng.com/uploads/preview/user-font-awesome-nuevo-usuario-icono-11563566658mjtfvilgcs.png\" className=\"avatar-sm rounded-circle mr-2\" alt=\"Shreyu\" />\r\n            <img src=\"https://toppng.com/uploads/preview/user-font-awesome-nuevo-usuario-icono-11563566658mjtfvilgcs.png\" className=\"avatar-xs rounded-circle mr-2\" alt=\"Shreyu\" />\r\n\r\n            <div className=\"media-body\">{\r\n                (!auth.isAuthenticated) ? (<h6 className=\"pro-user-name mt-0 mb-0\">Invitado</h6>):(<h6 className=\"pro-user-name mt-0 mb-0\">{auth.user}</h6>)\r\n            }\r\n                \r\n                \r\n                <span className=\"pro-user-desc\">Usuario</span>\r\n            </div>\r\n\r\n            <UncontrolledDropdown className=\"align-self-center profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-link p-0 dropdown-toggle mr-0\">\r\n                    <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <Link to=\"/\" className=\"dropdown-item notify-item\">\r\n                        <FeatherIcon.User className=\"icon-dual icon-xs mr-2\" />\r\n                        <span>My Account</span>\r\n                    </Link>\r\n                    <Link to=\"/\" className=\"dropdown-item notify-item\">\r\n                        <FeatherIcon.Settings className=\"icon-dual icon-xs mr-2\" />\r\n                        <span>Settings</span>\r\n                    </Link>\r\n                    <Link to=\"/\" className=\"dropdown-item notify-item\">\r\n                        <FeatherIcon.HelpCircle className=\"icon-dual icon-xs mr-2\" />\r\n                        <span>Support</span>\r\n                    </Link>\r\n                    <Link to=\"/\" className=\"dropdown-item notify-item\">\r\n                        <FeatherIcon.Lock className=\"icon-dual icon-xs mr-2\" />\r\n                        <span>Lock Screen</span>\r\n                    </Link>\r\n                    <DropdownItem divider />\r\n                    <Link to=\"/account/logout\" className=\"dropdown-item notify-item\">\r\n                        <FeatherIcon.LogOut className=\"icon-dual icon-xs mr-2\" />\r\n                        <span>Logout</span>\r\n                    </Link>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\n\r\n/**\r\n * Sidenav\r\n */\r\nconst SideNav = () => {\r\n    return <div className=\"sidebar-content\">\r\n        <div id=\"sidebar-menu\">\r\n            <AppMenu />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nclass LeftSidebar extends Component {\r\n    menuNodeRef;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleOtherClick = this.handleOtherClick.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Bind event\r\n     */\r\n    componentDidMount = () => {\r\n        document.addEventListener('mousedown', this.handleOtherClick, false);\r\n    };\r\n\r\n    /**\r\n     * Bind event\r\n     */\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('mousedown', this.handleOtherClick, false);\r\n    };\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    handleOtherClick = (e) => {\r\n        if (this.menuNodeRef.contains(e.target)) return;\r\n        // else hide the menubar\r\n        if (document.body && isMobileOnly) {\r\n            document.body.classList.remove('sidebar-enable');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle click\r\n     * @param {*} e\r\n     * @param {*} item\r\n     */\r\n    handleClick(e) {\r\n        console.log(e);\r\n    }\r\n\r\n    render() {\r\n        const isCondensed = this.props.isCondensed || false;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className='left-side-menu' ref={node => this.menuNodeRef = node}>\r\n                    <UserProfile />\r\n                    {!isCondensed && <PerfectScrollbar><SideNav /></PerfectScrollbar>}\r\n                    {isCondensed && <SideNav />}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(LeftSidebar);\r\n"],"sourceRoot":""}