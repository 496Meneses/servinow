{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/Loader.js","assets/images/logo.png","pages/auth/ForgetPassword.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_assertThisInitialized","self","ReferenceError","PreLoaderWidget","className","role","Component","ForgetPassword","props","_isMounted","handleValidSubmit","event","values","console","log","setState","isLoading","window","setTimeout","passwordResetSuccessful","renderRedirectToRoot","isUserAuthenticated","to","bind","onDismiss","state","this","document","body","classList","add","remove","isAuthTokenValid","Fragment","xl","md","href","src","logo","alt","height","error","color","isOpen","onValidSubmit","for","addonType","type","name","id","placeholder","email","required","connect"],"mappings":"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","file":"static/js/32.ba739772.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { Component } from 'react';\r\n\r\n/**\r\n * Renders the preloader\r\n */\r\nclass PreLoaderWidget extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"preloader\">\r\n                <div className=\"status\">\r\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreLoaderWidget;","export default __webpack_public_path__ + \"static/media/logo.89d909e7.png\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Alert, Label, InputGroup, InputGroupAddon } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Mail } from 'react-feather';\r\n\r\nimport { isUserAuthenticated } from '../../helpers/authUtils';\r\nimport Loader from '../../components/Loader';\r\nimport logo from '../../assets/images/logo.png';\r\n\r\nclass ForgetPassword extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleValidSubmit = this.handleValidSubmit.bind(this);\r\n        this.onDismiss = this.onDismiss.bind(this);\r\n        this.state = {\r\n            passwordResetSuccessful: false,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        document.body.classList.add('authentication-bg');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n        document.body.classList.remove('authentication-bg');\r\n    }\r\n\r\n    /**\r\n     * On error dismiss\r\n     */\r\n    onDismiss() {\r\n        this.setState({ passwordResetSuccessful: false });\r\n    }\r\n\r\n    /**\r\n     * Handles the submit\r\n     */\r\n    handleValidSubmit = (event, values) => {\r\n        console.log(values);\r\n        \r\n        this.setState({ isLoading: true });\r\n\r\n        // You can make actual api call to register here\r\n\r\n        window.setTimeout(() => {\r\n            this.setState({ isLoading: false, passwordResetSuccessful: true });\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    /**\r\n     * Redirect to root\r\n     */\r\n    renderRedirectToRoot = () => {\r\n        const isAuthTokenValid = isUserAuthenticated();\r\n        if (isAuthTokenValid) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isAuthTokenValid = isUserAuthenticated();\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {this.renderRedirectToRoot()}\r\n\r\n                {(this._isMounted || !isAuthTokenValid) && <div className=\"account-pages my-5\">\r\n                    <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                            <Col xl={10}>\r\n                                <Card className=\"\">\r\n                                    <CardBody className=\"p-0\">\r\n                                        <Row>\r\n                                            <Col md={6} className=\"p-5 position-relative\">\r\n                                                { /* preloader */}\r\n                                                {this.state.isLoading && <Loader />}\r\n\r\n                                                <div className=\"mx-auto mb-5\">\r\n                                                    <a href=\"/\">\r\n                                                        <img src={logo} alt=\"\" height=\"24\" />\r\n                                                        <h3 className=\"d-inline align-middle ml-1 text-logo\">Shreyu</h3>\r\n                                                    </a>\r\n                                                </div>\r\n\r\n                                                <h6 className=\"h5 mb-0 mt-4\">Reset Password</h6>\r\n                                                <p className=\"text-muted mt-1 mb-4\">\r\n                                                    Enter your email address and we'll send you an email with instructions to reset your password.\r\n                                                </p>\r\n\r\n\r\n                                                {this.props.error && <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\r\n                                                    <div>{this.props.error}</div>\r\n                                                </Alert>}\r\n\r\n                                                <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form\">\r\n                                                    <AvGroup className=\"\">\r\n                                                        <Label for=\"email\">Email Address</Label>\r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <span className=\"input-group-text\">\r\n                                                                    <Mail className=\"icon-dual\" />\r\n                                                                </span>\r\n                                                            </InputGroupAddon>\r\n                                                            <AvInput type=\"text\" name=\"email\" id=\"email\" placeholder=\"hello@coderthemes.com\" \r\n                                                                value={this.state.email} required />\r\n                                                        </InputGroup>\r\n                                                        \r\n                                                        <AvFeedback>This field is invalid</AvFeedback>\r\n                                                    </AvGroup>\r\n\r\n\r\n                                                    <FormGroup className=\"form-group mb-0 text-center\">\r\n                                                        <Button color=\"primary\" className=\"btn-block\">Submit</Button>\r\n                                                    </FormGroup>\r\n                                                </AvForm>\r\n                                            </Col>\r\n\r\n                                            <Col md={6} className=\"d-none d-md-inline-block\">\r\n                                                <div className=\"auth-page-sidebar\">\r\n                                                    <div className=\"overlay\"></div>\r\n                                                    <div className=\"auth-user-testimonial\">\r\n                                                        <p className=\"font-size-24 font-weight-bold text-white mb-1\">I simply love it!</p>\r\n                                                        <p className=\"lead\">\"It's a elegent templete. I love it very much!\"</p>\r\n                                                        <p>- Admin User</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-1\">\r\n                            <Col className=\"col-12 text-center\">\r\n                                <p className=\"texttext-muted\">Back to <Link to=\"/account/login\" className=\"text-primary font-weight-bold ml-1\">Login</Link></p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(ForgetPassword);"],"sourceRoot":""}