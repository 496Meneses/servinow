{"version":3,"sources":["routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/layout/constants.js","redux/appMenu/constants.js","constants/layout.js","redux/auth/actions.js","components/UserContext.js","redux/layout/actions.js","helpers/authUtils.js","redux/appMenu/actions.js","pages/Grupo/services.js","redux/auth/constants.js"],"names":["Login","React","lazy","Register","Dashboard","DetalleOfert","crearSolicitudComponent","listaOfertas","listaPostulados","listarSolicitudesSolicitante","verPerfilComponent","PrivateRoute","Component","component","rest","roles","auth","useAuth","props","isAuthenticated","to","rootRoute","path","exact","route","dashboardRoutes","name","icon","FeatherIcon","detalleOfert","Route","ofertas","postulados","listarSolicitudes","misSolicitudes","crearSolicitud","verPerfil","registrarse","authRoutes","children","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","loading","HorizontalLayout","Loadable","loader","render","loaded","default","connect","state","layout","Layout","user","Auth","map","index","App","Boolean","window","location","hostname","match","INIT_STATE","layoutType","layoutConstants","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","action","type","CHANGE_LAYOUT","payload","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","getLoggedInUser","LOGIN_USER","LOGIN_USER_SUCCESS","error","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","passwordResetStatus","FORGET_PASSWORD_FAILED","AppMenu","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","combineReducers","fetchJSON","url","options","fetch","then","response","status","json","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","JSON","stringify","remove","username","password","body","method","headers","call","put","loginUserSuccess","message","loginUserFailed","history","fullname","email","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","width","theme","uuid","assignIdAndParent","menuItems","parentId","id","active","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","pathname","indexOf","assignIds","initMenuSuccess","activatedMenuItemIds","changeActiveMenuFromLocationSuccess","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","registerUser","logoutUser","authContext","createContext","useContext","ProvideAuth","useState","setUser","setisAuthenticated","autenticationBasic","setAutenticationBasic","useEffect","localStorage","getItem","parse","cerrarSesion","removeItem","LoginService","request","data","setItem","useProvideAuth","Provider","changeSidebarTheme","changeSidebarType","sidebarType","isUserAuthenticated","get","initMenu","URLAPI","CrearSolicitudService","solicitud","axios","post","btoa","ConsultarCategoriaService","ConsultarHabilidadesPorCategoriaService","idCategoria","GetAllOferts","getTodasOfertas","usuario","EditarUsuarioService","EditarOfertaService","oferta","GetAllOfertsByRequestor","idRequestor","ObtenerDetalleUsuario","idUsuario","deleteSolicitud","idOferta","delete","deleteHabilidades","idHabilidad","console","log","postularseOferta","retirarseOferta","agregarHabilidadService","activarHabService","crearUsuarioService","desactivarHabService","editarHabService","finalizarOfertaService"],"mappings":"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","file":"static/js/main.a2f9b411.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\nimport {useAuth} from '../components/UserContext'\r\n//librerias David\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\nconst Dashboard = React.lazy(() => import('../pages/dashboard'));\r\nconst DetalleOfert = React.lazy(() => import('../pages/Grupo/Solicitud/DetalleOfertaTwo'));\r\nconst crearSolicitudComponent = React.lazy(() => import ('../pages/Grupo/Solicitud/CrearSolicitud'));\r\nconst listaOfertas = React.lazy(() => import ('../pages/Grupo/Solicitud/david/containers/OfertListContainer'));\r\nconst listaPostulados = React.lazy(() => import ('../pages/Grupo/Solicitud/ListarPostulantesSolicitud'));\r\nconst listarSolicitudesSolicitante = React.lazy(() => import ('../pages/Grupo/Solicitud/Solicitante'));\r\nconst verPerfilComponent = React.lazy(() => import ('../pages/Grupo/Usuarios/Perfil'));\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n    const auth = useAuth();\r\n    return (\r\n        <Route {...rest}\r\n            component= {\r\n                (props) => (\r\n                    (auth.isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/account/login\"/>)\r\n                )\r\n            }\r\n        \r\n        />\r\n    );\r\n\r\n\r\n}\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/ofertas\" />,\r\n    route: PrivateRoute\r\n};\r\n\r\n// dashboards\r\nconst dashboardRoutes = {\r\n    path: '/home',\r\n    name: 'Home',\r\n    icon: FeatherIcon.Home,\r\n    component: Dashboard,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute\r\n};\r\n//detalle oferta\r\nconst detalleOfert = {\r\n    path: '/oferta/detalle/:id',\r\n    name: 'detalle',\r\n    icon: FeatherIcon.Home,\r\n    component: DetalleOfert,\r\n    roles: ['Admin'],\r\n    route: Route\r\n};\r\n\r\nconst ofertas = {\r\n    path: '/ofertas',\r\n    name: 'Ofertas',\r\n    icon: FeatherIcon.Home,\r\n    component: listaOfertas,\r\n    roles: ['Admin'],\r\n    route: Route\r\n};\r\n\r\nconst postulados = {\r\n    path: '/postulados',\r\n    name: 'Postulados',\r\n    icon: FeatherIcon.Coffee,\r\n    component: listaPostulados,\r\n    route: PrivateRoute\r\n};\r\nconst listarSolicitudes = {\r\n    path: '/solicitudes',\r\n    name: 'Solicitudes',\r\n    icon: FeatherIcon.Coffee,\r\n    component: listarSolicitudesSolicitante,\r\n    route: PrivateRoute\r\n};\r\nconst misSolicitudes = {\r\n    path: '/misSolicitudes',\r\n    name: 'Mis solicitudes',\r\n    icon: FeatherIcon.Send,\r\n    component: listaPostulados,\r\n    route: PrivateRoute \r\n};\r\n\r\nconst crearSolicitud = {\r\n    path: '/solicitud',\r\n    name: 'Crear Solicitud',\r\n    icon: FeatherIcon.Mail,\r\n    component: crearSolicitudComponent,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute\r\n};\r\n\r\nconst verPerfil = {\r\n    path: '/perfil',\r\n    name: 'Ver perfil',\r\n    icon: FeatherIcon.User,\r\n    component: verPerfilComponent,\r\n    roles: ['Admin'],\r\n    route: Route\r\n};\r\nconst registrarse = {\r\n    path: '/Registrarse',\r\n    name: 'Registrarse',\r\n    icon: FeatherIcon.User,\r\n    component: Register,\r\n    roles: ['Admin'],\r\n    route: Route\r\n};\r\n\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        }\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = routes => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach(item => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [\r\n    rootRoute,\r\n    dashboardRoutes,\r\n    detalleOfert,\r\n    ofertas,\r\n    crearSolicitud,\r\n    postulados,\r\n    listarSolicitudes,\r\n    verPerfil,\r\n    authRoutes,\r\n    misSolicitudes,\r\n    registrarse\r\n];\r\nconst authProtectedRoutes = [ofertas,crearSolicitud,postulados, listarSolicitudes];\r\n//const authProtectedRoutes = [ofertas,crearSolicitud,misSolicitudes];\r\n// const authProtectedRoutes = [dashboardRoutes, ...appRoutes, pagesRoutes, componentsRoutes, chartRoutes, formsRoutes, tableRoutes];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes};\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nimport {useAuth} from \"../components/UserContext\"\r\n\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst Routes = (props) => {\r\n    \r\n    const auth = useAuth();\r\n    const getLayout = () => {\r\n            let layoutCls = HorizontalLayout;\r\n            return layoutCls\r\n            \r\n\r\n\r\n    }\r\n    const Layout = getLayout();\r\n            return <BrowserRouter>\r\n                <Layout {...props}>\r\n                    <Switch>\r\n                        {routes.map((route, index) => {\r\n                            return (\r\n                                !route.children ?\r\n                                    <route.route\r\n                                        key={index}\r\n                                        path={route.path}\r\n                                        roles={route.roles}\r\n                                        exact={route.exact}\r\n                                        component={route.component}></route.route>\r\n                                    : null\r\n                            );\r\n                        })}\r\n                    </Switch>\r\n                </Layout>\r\n                \r\n            </BrowserRouter>\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n\r\nimport './assets/scss/theme.scss';\r\nimport {ProvideAuth} from './components/UserContext'\r\nclass App extends Component {\r\n  render() {\r\n    return <ProvideAuth><Routes></Routes></ProvideAuth>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","import {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\n\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\n let uuid = 1;\r\n\r\n const assignIdAndParent = (menuItems, parentId) => {\r\n     menuItems = menuItems || [];\r\n     menuItems.forEach(item => {\r\n         const id = item.id || uuid;\r\n         uuid += 1;\r\n         item.id = id;\r\n         item.parentId = item.parentId || parentId;\r\n         item.active = false;\r\n \r\n         if (typeof item.children !== 'undefined') {\r\n             assignIdAndParent(item.children, id);\r\n         }\r\n     });\r\n };\r\n \r\n export default (menuItems) => {\r\n     assignIdAndParent(menuItems);\r\n     return menuItems;\r\n };","import { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\n\r\nexport default function* rootSaga(getState: any): any {\r\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","export const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","import React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport {LoginService} from \"../pages/Grupo/services\" \r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst authContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n  };\r\n\r\nexport function ProvideAuth({ children }) {\r\n    const auth = useProvideAuth();\r\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nfunction useProvideAuth() {\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setisAuthenticated] = useState(false)\r\n    const [autenticationBasic, setAutenticationBasic] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"usuario\")){\r\n            setisAuthenticated(true)\r\n            setUser(JSON.parse(localStorage.getItem(\"usuario\")))\r\n            setAutenticationBasic(localStorage.getItem(\"autenticacion\"))\r\n            \r\n        }\r\n    }, [])\r\n\r\n    const cerrarSesion = () => {\r\n        if (localStorage.getItem(\"usuario\")){\r\n            localStorage.removeItem(\"usuario\")\r\n            setisAuthenticated(false)\r\n            setUser(null)\r\n        }\r\n    }\r\n\r\n    const login = (username, password) => {\r\n\r\n        if (localStorage.getItem(\"usuario\")){\r\n            setisAuthenticated(true)\r\n            setUser(JSON.parse(localStorage.getItem(\"usuario\")))\r\n            setAutenticationBasic(`${username}:${password}`)\r\n        }else{\r\n\r\n            LoginService(`${username}:${password}`).then(\r\n                (request) =>{\r\n                    \r\n                    setisAuthenticated(true)\r\n                    setUser(JSON.parse(JSON.stringify(request.data)))\r\n                    setAutenticationBasic(`${username}:${password}`)\r\n                    localStorage.setItem(\"autenticacion\",`${username}:${password}`) // TODO SEGURIDAD!!!\r\n                    localStorage.setItem(\"usuario\", JSON.stringify(request.data) );\r\n                    return <Redirect to='/ofertas' />\r\n\r\n                }).catch(setisAuthenticated(false))\r\n\r\n            // setisAuthenticated(false)\r\n            // if (username!=null){\r\n            //     localStorage.setItem(\"usuario\", username );\r\n            //     setUser(username)\r\n            //     setisAuthenticated(true)\r\n            // }else{\r\n            //     setisAuthenticated(false)\r\n            // }\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return {\r\n        user,\r\n        setUser,\r\n        login,\r\n        isAuthenticated,\r\n        cerrarSesion,\r\n        autenticationBasic,\r\n    };\r\n}","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    // const user = getLoggedInUser();\r\n    // if (!user) {\r\n    //     return false;\r\n    // }\r\n    // const decoded = jwtDecode(user.token);\r\n    // const currentTime = Date.now() / 1000;\r\n    // if (decoded.exp < currentTime) {\r\n    //     console.warn('access token expired');\r\n    //     return false;\r\n    // } else {\r\n    //     return true;\r\n    // }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","import {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});","import axios from 'axios';\r\nconst URLAPI = 'http://54.234.20.23:8082/';\r\n\r\nexport const CrearSolicitudService = (solicitud) => {\r\n\r\n    const url = `${URLAPI}ofertaService/crearOferta`;\r\n    return axios.post(url, solicitud, {\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          }\r\n      } );\r\n}\r\nexport const ConsultarCategoriaService = () => {\r\n\r\n    const url = `${URLAPI}categoriaService/getCategorias`;\r\n    return axios.get(url,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\nexport const ConsultarHabilidadesPorCategoriaService = (idCategoria) => {\r\n\r\n    \r\n    const url = `${URLAPI}habilidadService/getHabilidades?id_categoria=${idCategoria}`;\r\n    return axios.get(url, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          }})\r\n\r\n}\r\n\r\nexport const ConsultarPostuladosPorOfertaService = (idOferta) => {\r\n    const url = `${URLAPI}ofertaService/getDetalleOferta?id_oferta=${idOferta}`;\r\n    return axios.get(url,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\nexport const GetOfertasDisponibles = (idPrestador) => {\r\n    const url = `${URLAPI}ofertaService/getOfertasALasQueCalifico?id_prestador=${idPrestador}`;\r\n    return axios.get(url)\r\n\r\n}\r\n\r\n//David\r\nexport const GetAllOferts = (getTodasOfertas) => {\r\n    const url = `${URLAPI}ofertaService/getTodasOfertas`;//=${getTodasOfertas}\r\n    return axios.get(url)\r\n\r\n}\r\n\r\nexport const GetAllUsers = () =>{\r\n    const url = `${URLAPI}usuarioService/getUsuarios`;\r\n    return axios.get(url,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n}\r\n\r\nexport const GetHabilidadUser = () =>{\r\n    const url = `${URLAPI}usuarioService/getHabilidades?id_prestador=1`;\r\n    return axios.get(url,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n}\r\n\r\nexport const LoginService = (usuario) => {\r\n\r\n    const url = `${URLAPI}loginService/login`;\r\n    return axios.post(url,{}, {\r\n        headers:{\r\n\r\n            'Authorization': \"Basic \"+btoa(usuario)\r\n          }\r\n      } );\r\n}\r\n\r\nexport const EditarUsuarioService = (usuario) => {\r\n    const url = `${URLAPI}usuarioService/actualizarUsuario`;\r\n    return axios.put(url,usuario,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n}\r\n\r\nexport const EditarOfertaService = (oferta) => {\r\n    const url = `${URLAPI}ofertaService/editarOferta`;\r\n    return axios.put(url,oferta,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n}\r\n\r\n\r\nexport const GetAllOfertsByRequestor = (idRequestor) => {\r\n\r\n    const url = `${URLAPI}ofertaService/getOfertasSolicitadas?id_usuario=${idRequestor}`;//=\r\n    //const url = `${URLAPI}ofertaService/getTodasOfertas`;//=${getTodasOfertas}\r\n    return axios.get(url,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\nexport const ObtenerDetalleUsuario = (idUsuario) =>{\r\n    const url = `${URLAPI}usuarioService/getUsuarioDetalle/${idUsuario}`;\r\n    return axios.get(url,{\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n}\r\nexport const deleteSolicitud = (idOferta) => {\r\n    const url = `${URLAPI}ofertaService/deleteOfertaById/${idOferta}`;\r\n    return axios.delete(url, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\n//Eliminar habilidad\r\nexport const deleteHabilidades = (idHabilidad) => {\r\n    console.log(\"metodo delete \"+ idHabilidad);\r\n    const url = `${URLAPI}usuarioService/eliminarHabilidadDePrestador/1/${idHabilidad}`;\r\n    return axios.delete(url, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\nexport const postularseOferta = (request) => {\r\n\r\n\r\n    const url = `${URLAPI}ofertaService/postularAOferta`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\n\r\nexport const retirarseOferta = (request) => {\r\n\r\n\r\n    const url = `${URLAPI}ofertaService/revocarPostulacion`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion'))\r\n          \r\n    }})\r\n\r\n}\r\n\r\nexport const agregarHabilidadService = (request) => {\r\n    const url = `${URLAPI}usuarioService/asignarHabilidad`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion')) \r\n    }})\r\n}\r\nexport const activarHabService = (request) =>{\r\n    const url = `${URLAPI}usuarioService/activarHabilidadDePrestador`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion')) \r\n    }})\r\n}\r\n\r\nexport const crearUsuarioService = (request) => {\r\n    const url = `${URLAPI}usuarioService/crearUsuario`;\r\n    return axios.post(url, request)\r\n}\r\n\r\n\r\n\r\nexport const desactivarHabService = (request) =>{\r\n    const url = `${URLAPI}usuarioService/desactivarHabilidadDePrestador`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion')) \r\n    }})\r\n}\r\n\r\n\r\nexport const editarHabService = (request) =>{\r\n    const url = `${URLAPI}usuarioService/cambiarHabilidad`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion')) \r\n    }})\r\n}\r\n\r\n\r\nexport const finalizarOfertaService = (request) =>{\r\n    const url = `${URLAPI}ofertaService/terminarSolicitud`;\r\n    return axios.post(url, request, {\r\n        headers:{\r\n            'Authorization': \"Basic \"+btoa(localStorage.getItem('autenticacion')) \r\n    }})\r\n}\r\n  ","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n"],"sourceRoot":""}